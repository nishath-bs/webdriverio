import path from 'node:path';
import fs from 'node:fs';
import { BStackLogger } from './bstackLogger.js';
const workersDataDirPath = path.join(process.cwd(), 'logs', 'worker_data');
export function getDataFromWorkers() {
    const workersData = [];
    if (!fs.existsSync(workersDataDirPath)) {
        return workersData;
    }
    const files = fs.readdirSync(workersDataDirPath);
    files.forEach((file) => {
        BStackLogger.debug('Reading worker file ' + file);
        const filePath = path.join(workersDataDirPath, file);
        const fileContent = fs.readFileSync(filePath, 'utf8');
        const workerData = JSON.parse(fileContent);
        workersData.push(workerData);
    });
    // Remove worker data after all reading
    removeWorkersDataDir();
    return workersData;
}
export function saveWorkerData(data) {
    const filePath = path.join(workersDataDirPath, 'worker-data-' + process.pid + '.json');
    try {
        createWorkersDataDir();
        fs.writeFileSync(filePath, JSON.stringify(data));
    }
    catch (e) {
        BStackLogger.debug('Exception in saving worker data: ' + e);
    }
}
export function removeWorkersDataDir() {
    fs.rmSync(workersDataDirPath, { recursive: true, force: true });
    return true;
}
function createWorkersDataDir() {
    if (!fs.existsSync(workersDataDirPath)) {
        fs.mkdirSync(workersDataDirPath, { recursive: true });
    }
    return true;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1zdG9yZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9kYXRhLXN0b3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sSUFBSSxNQUFNLFdBQVcsQ0FBQTtBQUM1QixPQUFPLEVBQUUsTUFBTSxTQUFTLENBQUE7QUFFeEIsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRWhELE1BQU0sa0JBQWtCLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsTUFBTSxFQUFFLGFBQWEsQ0FBQyxDQUFBO0FBRTFFLE1BQU0sVUFBVSxrQkFBa0I7SUFDOUIsTUFBTSxXQUFXLEdBQTZCLEVBQUUsQ0FBQTtJQUVoRCxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUM7UUFDckMsT0FBTyxXQUFXLENBQUE7SUFDdEIsQ0FBQztJQUVELE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtJQUNoRCxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDbkIsWUFBWSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUMsQ0FBQTtRQUNqRCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFLElBQUksQ0FBQyxDQUFBO1FBQ3BELE1BQU0sV0FBVyxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFBO1FBQ3JELE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUE7UUFDMUMsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUNoQyxDQUFDLENBQUMsQ0FBQTtJQUVGLHVDQUF1QztJQUN2QyxvQkFBb0IsRUFBRSxDQUFBO0lBRXRCLE9BQU8sV0FBVyxDQUFBO0FBQ3RCLENBQUM7QUFFRCxNQUFNLFVBQVUsY0FBYyxDQUFDLElBQXlCO0lBQ3BELE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsY0FBYyxHQUFHLE9BQU8sQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLENBQUE7SUFFdEYsSUFBSSxDQUFDO1FBQ0Qsb0JBQW9CLEVBQUUsQ0FBQTtRQUN0QixFQUFFLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7SUFDcEQsQ0FBQztJQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDVCxZQUFZLENBQUMsS0FBSyxDQUFDLG1DQUFtQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0lBQy9ELENBQUM7QUFDTCxDQUFDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQjtJQUNoQyxFQUFFLENBQUMsTUFBTSxDQUFDLGtCQUFrQixFQUFFLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQTtJQUMvRCxPQUFPLElBQUksQ0FBQTtBQUNmLENBQUM7QUFFRCxTQUFTLG9CQUFvQjtJQUN6QixJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUM7UUFDckMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFBO0lBQ3pELENBQUM7SUFDRCxPQUFPLElBQUksQ0FBQTtBQUNmLENBQUMifQ==